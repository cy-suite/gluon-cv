FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04

# Install conda
ENV PATH="/root/miniconda3/bin:${PATH}"
ARG PATH="/root/miniconda3/bin:${PATH}"
RUN apt-get update

RUN apt-get install -y wget git cmake && rm -rf /var/lib/apt/lists/*

RUN wget \
    https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && mkdir /root/.conda \
    && bash Miniconda3-latest-Linux-x86_64.sh -b \
    && rm -f Miniconda3-latest-Linux-x86_64.sh

# Clone TVM
RUN git clone --recursive https://github.com/apache/tvm tvm
WORKDIR tvm
RUN conda env create -f conda/build-environment.yaml
RUN echo "source activate $(head -1 /conda/build-environment.yml | cut -d' ' -f2)" > ~/.bashrc
ENV PATH /opt/conda/envs/$(head -1 /conda/build-environment.yml | cut -d' ' -f2)/bin:$PATH
RUN mkdir build &&  cp cmake/config.cmake build && cd build && cmake .. && make -j4

RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential \
      locales \
      cmake \
      wget \
      subversion \
      git \
      curl \
      vim \
      unzip \
      sudo \
      ca-certificates \
      libjpeg-dev \
      libpng-dev \
      libfreetype6-dev \
      libopenblas-dev \
      python3-dev \
      python3-pip \
      python3-setuptools \
      pandoc \
      libgl1-mesa-glx \
      libxft-dev &&\
  rm -rf /var/lib/apt/lists/*


RUN pip3 install --upgrade pip
RUN pip3 install  --no-cache --upgrade \
    wheel \
    cmake \
    awscli \
    pypandoc \
    nose \
    nose-timer \
    torch \
    torchvision
RUN git clone https://github.com/dmlc/gluon-cv
WORKDIR gluon-cv
ADD gluon_cv_job.sh .
RUN chmod +x gluon_cv_job.sh
